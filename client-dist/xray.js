/* eleventy-plugin-xray v1.0.0-alpha.3
https://github.com/VividVisions/eleventy-plugin-xray */
const e=new class{storage;constructor(e){this.storage=e||window.sessionStorage}get(e,t=!1){const a=this.storage.getItem(e);return null===a&&!0===t?{}:null===a?null:JSON.parse(a)}set(e,t){this.storage.setItem(e,"string"==typeof t?t:JSON.stringify(t))}};class t{element;xrayElement;xrayRootElement;boundClickHandler;constructor(e,t,a){this.element=e,this.xrayRootElement=t,this.xrayElement=a,this.boundClickHandler=this.clickHandler.bind(this),this.element.querySelectorAll("a").forEach((e=>{e.addEventListener("click",this.boundClickHandler)}))}clickHandler(t){const a=t.target.closest("li");if(a.classList.toggle("active"),a.classList.contains("xray"))this.xrayElement.classList.toggle("active"),this.xrayRootElement.classList.toggle("active");else{const t=e.get("xray:hide",!0),n=a.classList.values().next().value,s=this.xrayRootElement.shadowRoot.getElementById(n);s&&s.classList.toggle("active"),a.classList.contains("active")?delete t[n]:t[n]=!0,e.set("xray:hide",t)}t.preventDefault()}}class a{element;label;boundClickHandler;constructor(e){this.element=e,this.label=this.element.querySelector("label"),this.boundClickHandler=this.clickHandler.bind(this),this.label.addEventListener("click",this.boundClickHandler)}clickHandler(e){const t=e.target.closest("ul.tree");t.classList.toggle("closed"),e.altKey&&t.querySelectorAll("ul.tree").forEach((e=>{e.classList.toggle("closed",t.classList.contains("closed"))}))}}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var s=/["'&<>]/,o=function(e){var t,a=""+e,n=s.exec(a);if(!n)return a;var o="",i=0,l=0;for(i=n.index;i<a.length;i++){switch(a.charCodeAt(i)){case 34:t="&quot;";break;case 38:t="&amp;";break;case 39:t="&#39;";break;case 60:t="&lt;";break;case 62:t="&gt;";break;default:continue}l!==i&&(o+=a.substring(l,i)),l=i+1,o+=t}return l!==i?o+a.substring(l,i):o};var i=n(o);function l(e){return`<ul class="root">${r(e)}</ul>`}function r(e,t=0){let a=e?.key?i(e.key)+": ":"";if(e?.where){let t;switch(e.where){case"f":t="Front matter";break;case"d":t="Directory";break;case"t":t="Template/Layout"}a=`<span class="where" title="${t}">${a}</span>`}switch(e.type){case"string":case"number":case"boolean":case"regexp":case"symbol":case"date":case"instance":case"circular":case"function":case"unknown":return`<li>${a}<code class="${e.type}"><span>${e.content?i(e.content):""}</span></code></li>`;case"null":case"undefined":return`<li>${a}<code class="${e.type}"></code></li>`;case"object":return e.content&&e.content.length>0?`<li>\n\t\t\t\t<ul class="tree ${t>0?" closed":""}">\n\t\t\t\t\t<label>${a}<code class="${e.type}"><span>${e.content.length}</span></code></label>\n\t\t\t\t\t${e.content.map((e=>r(e,t+1))).join("")}\n\t\t\t\t</ul>\n\t\t\t\t</li>`:`<li>${a}<code class="${e.type}"></code></li>`;case"set":case"map":case"array":return e?.content?.length>0?`<li>\n\t\t\t\t<ul class="tree${t>0?" closed":""}">\n\t\t\t\t\t<label>${a}<code class="${e.type}"><span>${e.length}</span></code></label>\n\t\t\t\t\t${e.content.map((e=>r(e,t+1))).join("")}\n\t\t\t\t</ul>\n\t\t\t\t</li>`:`<li>${a}<code class="${e.type}"><span>${e.length}</span></code></li>`;default:throw new Error(`[xray-plugin] Unknown data type '${e.type}' encountered.`)}}const c=function(){};new class{xrayRootElement;xrayElement;times={};config={};shadowRoot;trayController;constructor(n){document.addEventListener("DOMContentLoaded",(async s=>{switch(this.times.dom=this.formatMS(performance.now()),this.xrayRootElement=document.getElementById(n),this.shadowRoot=this.xrayRootElement.shadowRoot,this.xrayElement=this.shadowRoot.getElementById("xray"),this.config.logLevel=this.xrayRootElement.dataset.loglevel||"info",this.config.relativePath=this.xrayRootElement.dataset.relative,["debug","info","warn","error"].forEach((e=>{this[e]=function(t,...a){this.log(e,`[xray] ${t}`,a)}})),this.config.logLevel){case"none":this.debug=c;case"error":this.warn=c;case"warn":this.info=c;case"info":this.debug=c}const o=document.createElement("style");o.textContent=":root:has(#xray-plugin.active) { overflow: hidden !important; }",document.querySelector("head").appendChild(o),setTimeout((()=>{this.xrayElement.classList.remove("loading")}),500),this.trayController=new t(this.shadowRoot.querySelector("#xray-tray"),this.xrayRootElement,this.xrayElement);const i=await this.loadData();this.debug("Rendering global data.");if(this.shadowRoot.querySelector("#globaldata div").innerHTML=l(i.globalData),i?.git){this.debug("Rendering Git info.");const e=i.git;this.shadowRoot.querySelector("#browser").insertAdjacentHTML("afterend",`<h3>Git</h3>\n\t<dl id="git">\n\t\t<dt>Branch</dt>\n\t\t<dd><span ${e?.branch?'class="string"':'class="undefined"'}>${e?.branch||"-"}</span></dd>\n\t\t<dt>Revision</dt>\n\t\t<dd><span ${e?.sha?`class="string" title="${e.sha}"`:'class="undefined"'}>${e?.sha?e.sha.substr(0,8):"-"}</span></dd>\n\t</dl>`)}const r=this.config.relativePath.substring(0,this.config.relativePath.lastIndexOf("/")),d=new URL(r,location.href),h=location.pathname.replace(d.pathname,"/").replace("index.html","");if(i.pages?.[h]?.benchmarks){this.debug("Rendering benchmarks.");const e=i.pages[h].benchmarks;let t=document.createElement("dt"),a=document.createElement("dd");t.textContent="File size";let n=i.pages[h].size;i.pages[h]?.xraySize&&(n-=i.pages[h].xraySize),n=this.formatBytes(n),a.innerHTML=`<span class="number">${n.value}</span>${n.unit} (excl. Xray)`;let s=this.shadowRoot.querySelector("dl#page");s.append(t),s.append(a),t=document.createElement("dt"),a=document.createElement("dd"),t.textContent="Compile time";let o=this.formatMS(e.compile);a.innerHTML=`<span class="number">${o.value}</span>${o.unit}`,s.append(t),s.append(a),t=document.createElement("dt"),a=document.createElement("dd"),t.textContent="Render time",o=this.formatMS(e.render),a.innerHTML=`<span class="number">${o.value}</span>${o.unit}${e.paginated?" (All paginated pages)":""}`,s.append(t),s.append(a),e.paginated&&(t=document.createElement("dt"),a=document.createElement("dd"),t.textContent="RT per page",o=this.formatMS(e.renderEach),a.innerHTML=`<span class="number">${o.value}</span>${o.unit} avg. (<span class="number">${e.paginated}</span> page${e.paginated>1?"s":""})`,s.append(t),s.append(a))}const u=e.get("xray:hide",!0);for(const e in u){const t=this.shadowRoot.querySelector(`#xray-tray .${e}`),a=this.shadowRoot.querySelector(`#${e}`);!0===u[e]?(t.classList.remove("active"),a.classList.remove("active")):(t.classList.add("active"),a.classList.add("active"))}this.shadowRoot.querySelectorAll("ul.tree").forEach((e=>{new a(e)}))}),{once:!0}),window.addEventListener("load",(e=>{this.debug("Rendering load times."),this.times.load=this.formatMS(performance.now()),this.shadowRoot.querySelector("dd.dom").innerHTML=`<span class="number">${this.times.dom.value}</span>${this.times.dom.unit}`,this.shadowRoot.querySelector("dd.load").innerHTML=`<span class="number">${this.times.load.value}</span>${this.times.load.unit}`}),{once:!0})}log(e,t,a){a?.length?console[e](t,...a):console[e](t)}formatMS(e){return e>=1e3?{value:(e/1e3).toFixed(2),unit:"s"}:e<.01?{value:(1e3*e).toFixed(2),unit:"μs"}:{value:e.toFixed(2),unit:"ms"}}formatBytes(e){return e>=1e6?{value:(e/1e6).toFixed(2),unit:"MB"}:e>=1e3?{value:(e/1e3).toFixed(2),unit:"KB"}:{value:e,unit:"B"}}async loadData(){let t,a=!1;try{t=e.get("xray:data")}catch(e){this.debug("Abandoning the cache due to corrupted data.",e),a=!0}if(t&&!a){const e=`${this.config.relativePath}/xray-timestamp.json`;let a;try{a=await fetch(e).then((e=>e.json()))}catch(e){this.error("Error while fetching xray-timestamp.json!",e)}if(this.debug("Cached timestamp  %s / Latest timestamp %s",t.timestamp,a.timestamp),a.timestamp===t.timestamp)return this.debug("Returning cached data."),t}const n=`${this.config.relativePath}/xray-data.json`;this.debug("Loading data…",n);try{const a=await fetch(n),s=a.clone();this.debug("Caching data…"),e.set("xray:data",await a.text()),t=await s.json()}catch(e){this.error("Error while fetching/parsing xray-data.json!",e)}return t}}("xray-plugin");
